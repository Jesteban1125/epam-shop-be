service: product-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  httpApi:
    cors: true
  environment:
    PRODUCTS_TABLE_NAME: Products-Table
    STOCKS_TABLE_NAME: Stocks-Table
    CATALOG_ITEMS_QUEUE_URL:
      Ref: catalogItemsQueue
    CREATE_PRODUCT_TOPIC_ARN:
      Ref: createProductTopic
  # iamRoleStatementsInherit: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.PRODUCTS_TABLE_NAME}"
        - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.STOCKS_TABLE_NAME}"
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - Ref: createProductTopic

package:
  exclude:
    - ./**
  include:
    - products.json
    - package.json
  individually: true

functions:
  getProductsList:
    handler: getProductsList-dist.handler
    package:
      include:
        - getProductsList-dist.js
    events:
      - httpApi:
          path: /products
          method: get
  getProductsById:
    handler: getProductsById-dist.handler
    package:
      include:
        - getProductsById-dist.js
    events:
      - httpApi:
          path: /products/{productId}
          method: get
  createProduct:
    handler: createProduct-dist.handler
    package:
      include:
        - createProduct-dist.js
    events:
      - httpApi:
          path: /products
          method: post
  catalogBatchProcess:
    handler: catalogBatchProcess-dist.handler
    package:
      include:
        - catalogBatchProcess-dist.js
    events:
      - sqs:
          arn:
            Fn::Join:
              - ':'
              - - arn
                - aws
                - sqs
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - catalogItemsQueue
          batchSize: 5

resources:
  Resources:
    productsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PRODUCTS_TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    stocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.STOCKS_TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH

    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue

    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
        # Subscription:
        #   - Endpoint: juan_rios@epam.com
        #     Protocol: email

    createProductSuscriptionLessThan3:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn:
          Ref: createProductTopic
        Endpoint: juan_rios@epam.com
        Protocol: email
        FilterPolicy:
          count:
            - numeric: 
              - "<"
              - 3
        FilterPolicyScope: MessageAttributes

    createProductSuscriptionMoreThan3:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn:
          Ref: createProductTopic
        Endpoint: jesteban1125@gmail.com
        Protocol: email
        FilterPolicy:
          count:
            - numeric: 
              - ">="
              - 3
        FilterPolicyScope: MessageAttributes
